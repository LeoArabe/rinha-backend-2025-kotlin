version: '3.8'

services:
  mongo:
    image: mongo:7.0
    container_name: mongo
    hostname: mongo
    restart: unless-stopped
    environment:
      - MONGO_INITDB_DATABASE=rinhaDB
    volumes:
      - mongo_data:/data/db
    command: --replSet rs0 --bind_ip_all --logpath /dev/null --quiet
    networks:
      - rinha-network
    healthcheck:
      test: |
        mongosh --host mongo:27017 --quiet --eval "
          try {
            const status = rs.status();
            if (status.myState === 1 || status.myState === 2) {
              quit(0);
            } else {
              quit(1);
            }
          } catch (e) {
            rs.initiate({ _id: 'rs0', members: [{ _id: 0, host: 'mongo:27017' }] });
            quit(1);
          }"
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "512M"

  redis:
    image: redis:7.2-alpine
    container_name: redis
    hostname: redis
    restart: unless-stopped
    command: >
      redis-server
      --maxmemory 90mb
      --maxmemory-policy allkeys-lru
      --save ""
      --appendonly no
    networks:
      - rinha-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    deploy:
      resources:
        limits:
          cpus: "0.4"
          memory: "100M"

  api01: &api-template
    build: .
    hostname: api01
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - spring.data.mongodb.uri=mongodb://mongo:27017/rinhaDB?replicaSet=rs0
      - spring.data.redis.host=redis
      - spring.data.redis.port=6379
      - app.processors.default.url=http://payment-processor-default:8080
      - app.processors.fallback.url=http://payment-processor-fallback:8080
      - app.instance-id=API-1
    ports:
      - "8081:8080"
    restart: always
    networks:
      - rinha-network
      - payment-processor
    depends_on:
      mongo:
        condition: service_healthy
      redis:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: "0.25"
          memory: "155M"
    healthcheck:
      test: [ "CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/actuator/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  api02:
    <<: *api-template
    hostname: api02
    ports:
      - "8082:8080"
    environment:
      - INSTANCE_ID=API-2

  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: unless-stopped
    ports:
      - "9999:9999"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      api01:
        condition: service_healthy
      api02:
        condition: service_healthy
    networks:
      - rinha-network

volumes:
  mongo_data:

networks:
  rinha-network:
    driver: bridge
  payment-processor:
    driver: bridge
    external: true