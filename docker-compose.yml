# Template com as configurações comuns das APIs
x-api-template: &api-template
  build: .
  restart: always
  networks:
    - rinha
    - payment-processor
  depends_on:
    mongo:
      condition: service_healthy
    redis:
      condition: service_healthy
  deploy:
    resources:
      limits:
        cpus: "0.25"
        memory: "55M"

services:
  api01:
    <<: *api-template # Herda toda a configuração do template
    hostname: api01
    environment:
      # ADICIONA/SOBRESREVE apenas as variáveis específicas desta instância
      - INSTANCE_ID=API-1
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATA_MONGODB_URI=mongodb://mongo:27017/rinhaDB?replicaSet=rs0
      - PROCESSOR_DEFAULT_URL=http://payment-processor-default:8080
      - PROCESSOR_FALLBACK_URL=http://payment-processor-fallback:8080

  api02:
    <<: *api-template # Herda toda a configuração do template
    hostname: api02
    environment:
      # ADICIONA/SOBRESREVE apenas as variáveis específicas desta instância
      - INSTANCE_ID=API-2
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATA_MONGODB_URI=mongodb://mongo:27017/rinhaDB?replicaSet=rs0
      - PROCESSOR_DEFAULT_URL=http://payment-processor-default:8080
      - PROCESSOR_FALLBACK_URL=http://payment-processor-fallback:8080

  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "9999:9999"
    depends_on:
      - api01
      - api02
    networks:
      - rinha
    deploy:
      resources:
        limits:
          cpus: "0.1"
          memory: "20M"

  mongo:
    image: mongo:6.0
    container_name: mongo
    hostname: mongo
    ports:
      - "27017:27017"
    command: --replSet rs0 --bind_ip_all --quiet
    networks:
      - rinha
    healthcheck:
      test: |
        mongosh --host mongo:27017 --quiet --eval "
          try {
            const status = rs.status();
            if (status.myState === 1 || status.myState === 2) { quit(0); }
            else { quit(1); }
          } catch (e) {
            rs.initiate({ _id: 'rs0', members: [{ _id: 0, host: 'mongo:27017' }] });
            quit(1);
          }"
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "120M"
    volumes:
      - mongo_data:/data/db

  redis:
    image: redis:7-alpine
    container_name: redis
    hostname: redis
    command: >
      redis-server --maxmemory 90mb --maxmemory-policy allkeys-lru --save "" --appendonly no
    networks:
      - rinha
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: "0.4"
          memory: "100M"

volumes:
  mongo_data:

networks:
  rinha:
    driver: bridge
  # Esta rede agora é definida aqui, não mais como externa
  payment-processor:
    driver: bridge