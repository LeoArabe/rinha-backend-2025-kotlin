# Caminho: src/main/resources/application.yml

# ===================================================================
# CONFIGURAÇÃO ÚNICA E SIMPLIFICADA
# ===================================================================
server:
  port: 8080

spring:
  application:
    name: rinha-backend-2025

  # --- Configuração de Persistência ---
  data:
    mongodb:
      # ✅ CORREÇÃO: Usa um placeholder não-conflitante (MONGODB_URI)
      uri: ${MONGODB_URI:mongodb://mongo:27017/rinhaDB?replicaSet=rs0}
      auto-index-creation: false

    redis:
      host: ${REDIS_HOST:redis}
      port: ${REDIS_PORT:6379}
      timeout: 3s
      lettuce:
        pool:
          max-active: 32
          max-idle: 16
          min-idle: 4

  # --- Actuator para Health Checks ---
  management:
    endpoints:
      web:
        exposure:
          include: health,info
    endpoint:
      health:
        show-details: when-authorized

# ===================================================================
# Configurações Específicas da Aplicação
# ===================================================================
payment:
  processors:
    default:
      url: ${PROCESSOR_DEFAULT_URL:http://payment-processor-default:8080}
    fallback:
      url: ${PROCESSOR_FALLBACK_URL:http://payment-processor-fallback:8080}

  # ✅ CORREÇÃO: Bloco de configuração que estava em falta adicionado
  circuit-breaker:
    request-timeout-seconds: ${PAYMENT_REQUEST_TIMEOUT_SECONDS:4}
    failure-threshold: 5
    recovery-timeout-seconds: 30

app:
  instance-id: ${INSTANCE_ID} # Será fornecido pelo docker-compose
  outbox:
    processing-delay-ms: 200
    leader-ttl-seconds: 5


# ===================================================================
# LOGS ESTRATÉGICOS (MANTIDOS PARA GARANTIR A VERIFICAÇÃO)
# ===================================================================
logging:
  level:
    org.springframework.data.mongodb: DEBUG
    org.mongodb.driver: DEBUG
    com.estagiario.gobots.rinha_backend: INFO
    root: WARN